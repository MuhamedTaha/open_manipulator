#!/usr/bin/env python

# Copyright (c) 2011, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#    * Neither the name of the Willow Garage, Inc. nor the names of its
#      contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import rospy
from std_msgs.msg import String
import sys, select, termios, tty

MOVE_STEP_SIZE = 0.01

msg = """
Control Your OpenManipulator!
---------------------------
Moving around:
q : increase x axis in cartesian space
w : decrease x axis in cartesian space
a : increase y axis in cartesian space
s : decrease y axis in cartesian space
z : increase z axis in cartesian space
x : decrease z axis in cartesian space

g : gripper open
f : gripper close

h : home pose
b : base pose

CTRL-C to quit
"""

e = """
Communications Failed
"""

def getKey():
    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key

if __name__=="__main__":
    settings = termios.tcgetattr(sys.stdin)

    rospy.init_node('open_manipulator_teleop')
    pub = rospy.Publisher('open_manipulator/teleop_key_cmd_val', String, queue_size=10)

    status = 0
    target_linear_vel   = 0.0
    target_angular_vel  = 0.0
    control_linear_vel  = 0.0
    control_angular_vel = 0.0

    try:
        print msg
        while(1):
            key = getKey()
            if key == 'q' : # + x axis
                print "input : q \tincrease(++) x axis in cartesian space"
                pub.publish(key)
            elif key == 'w' :
                print "input : w \tdecrease(--) x axis in cartesian space"
                pub.publish(key)
            elif key == 'a' :
                print "input : a \tincrease(++) y axis in cartesian space"
                pub.publish(key)
            elif key == 's' :
                print "input : s \tdecrease(--) y axis in cartesian space"
                pub.publish(key)
            elif key == 'z' :
                print "input : z \tincrease(++) z axis in cartesian space"
                pub.publish(key)
            elif key == 'x' :
                print "input : x \tdecrease(--) z axis in cartesian space"
                pub.publish(key)
            elif key == 'g' :
                print "input : g \topen gripper"
                pub.publish(key)
            elif key == 'f' :
                print "input : f \tclose gripper"
                pub.publish(key)
            elif key == 'h' :
                print "input : h \thome pose"
                pub.publish(key)
            elif key == 'b' :
                print "input : b \tbase pose"
                pub.publish(key)
            else:
                if (key == '\x03'):
                    break
    except:
        print e

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
